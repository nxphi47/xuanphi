#############################
Feature Extraction
#############################

Contain below files:
    ====================== old readme ========================================
	json2graph.py		- main script to convert json file to output 
							- graph for each cycle
							- *.csv raw data in csv format
							- *-det.txt contain detail for each cycle
							- *-wave.csv data file for NUS
							- com-*.csv feature extraction for each cycle
	combine.py			- library imported to json2graph.py
						- plot all signal into one graph and perform feature extraction
	load.py				- load com-*.py file to output feature of each cycle into single *.csv
	complot.py			- plot multiple com-*.py graph into single file
	======================= new addition =====================================
	feature.py			- adapted from combine.py to use list instead of appending index to dictionary name
	svmclassifier.py	- library wrapper to use the libSVM for cross-validating training
	json2graph2.py		- adapted from json2graph.py to use feature.py instead of combine.py
	process-json.py     - process all .json files in a directory to generate a single database containing features of all samples
	generate-training-samples.py:
						- to generate training samples based on specified features to used from the single database
	svm-train.py		- train/test SVM using the generated training samples
	utils.py			- utilities used by other python scripts
	feature-eval.py		- evaluate features by considering their inter/intra class mean and std-dev
	svm-train-all-features.py	- try all combinations of features and see which SVM training is the best

_______________________________
json2graph.py
_______________________________

main file which modified from ChanWah json2csv.py.
It will convert input raw data to:
	- *.csv		- raw data in csv format
	- *-det.txt	- detail file contain extrat parameters and detail for each cycle (min, max, distance calc)
	- *-wave.csv	- data file for NUS, contain [timestamp] [envelop] [actual_distance] [actual_height]
	- com-*.csv		- feature extraction file, require for load.py and complot.py

_______________________________
combine.py
_______________________________

serve as library to json2graph.py, it contain two clases
1.	COMBINE
		- plot signal of all cycle into single graph
		- output:
			- *_all.png		- all signal plot by remove initial portion at beginning)
			- *_all_rezoom.png	- all reflected signal plot

2. singleReflect
		- feature extration for each cycle
		- all features store in dictionary and return to json2graph.py
		- after that it will dump into com-*.csv file

_______________________________
Running json2graph.py
_______________________________

To obtain features and output graph, run below command:
$ python json2graph.py -d 3 -g -22.5 -dir [path_to_json_file]

-d = actual distance
-g = actual height
both agruments only use for *-wave.csv data file for NUS

json2graph.py read paramter from two ways:
1. from config.ini
	- config.ini located same directory with json2graph.py 
	- each time json2graph.py run, it will import setting from this file
2. user input
	- user can overwrite config.ini parameter by manual insert
	- if user include parameter command when try to start json2graph.py, those setting will be use instead of setting in config.ini
	- Run 
		$python json2graph.py -h	for more detail

_______________________________
load.py
_______________________________

Require com-*.csv from json2graph.py
It use to extract all feature into a format which easier to plot histogram in excel.

To run the script, insert:
$ python load.py [outputName] [path_to_com-*.csv]

There have three outputs:
1. [outputName].csv			- output feature for each cycle  for easier to plot histogram
2. [outputName]-list.csv	- output feature detail for each cycle include reflected signal. Disable by default
3. [outputName]-ori.csv		- output original signal with min and max value. Disabel by default

[outputName].csv is neccessary for histogram plotting as it list out all cycle featurs in correct order


_______________________________
complot.py
_______________________________

Require com-*.csv from json2graph.py
It use to plot reflected signal from multiple com-*.csv

To run the script, insert:
$ python complot.py [outpuName] [1st_com-*.csv] [2nd_com-*.csv] ... [8th_com-*.csv]

It support up to 8 com-*.csv and plot their reflected signal into one graph for comparison

However bare in mind with the COLOR setting. Length of COLOR must more than number of com-*.csv to make sure each com-*.csv use different
color during plotting.


=================================================

The flow of the using the new scripts are as follows:

0. (Optional) Run json2graph2.py
	To generate the graphs from json files
	Eg:  python json2graph2.py -dir data/3m

1. Run process-json.py
	To generate a single sample database
	Eg. python2 process-json.py -dir data/3m/ -c data-processing/config.ini -out data/3m/processed.data.20160229
	
2. Run generate-training-samples.py
	To generate the training samples
	If the features included in the feature vector need to be changed, change here.
	Eg.  python2 generate-training-samples.py data/3m/processed.data.20160229 data/3m/training.samples.20160229 6
	
3. Run svm-train.py
	To train the SVM
	E.g. python2 svm-train.py data/3m/training.samples.20160229 data/3m/train.20160229.svm

For how to use each individual scripts, see the usage() function in each script.

